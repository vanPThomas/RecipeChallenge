// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.DatalayerModel;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(ChallengeContext))]
    [Migration("20240115184447_initDB2")]
    partial class initDB2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entity.ChallengeDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DefaultPicture")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("Month")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Challenges");
                });

            modelBuilder.Entity("Domain.Entity.ItemDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChallengeDBId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Votes")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChallengeDBId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Domain.Entity.PartDB", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("ItemDBId")
                        .HasColumnType("int");

                    b.HasKey("Name");

                    b.HasIndex("ItemDBId");

                    b.ToTable("Parts");
                });

            modelBuilder.Entity("Domain.Entity.PrizeDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("ChallengeDBId")
                        .HasColumnType("int");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("ChallengeDBId");

                    b.ToTable("Prizes");
                });

            modelBuilder.Entity("Domain.Entity.UserDB", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Persistence.DatalayerModel.PhotoDB", b =>
                {
                    b.Property<string>("Location")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("ItemDBId")
                        .HasColumnType("int");

                    b.HasKey("Location");

                    b.HasIndex("ItemDBId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("Domain.Entity.ItemDB", b =>
                {
                    b.HasOne("Domain.Entity.ChallengeDB", null)
                        .WithMany("Recipes")
                        .HasForeignKey("ChallengeDBId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Domain.Entity.PartDB", b =>
                {
                    b.HasOne("Domain.Entity.ItemDB", null)
                        .WithMany("Parts")
                        .HasForeignKey("ItemDBId");
                });

            modelBuilder.Entity("Domain.Entity.PrizeDB", b =>
                {
                    b.HasOne("Domain.Entity.ChallengeDB", null)
                        .WithMany("Prizes")
                        .HasForeignKey("ChallengeDBId");
                });

            modelBuilder.Entity("Persistence.DatalayerModel.PhotoDB", b =>
                {
                    b.HasOne("Domain.Entity.ItemDB", null)
                        .WithMany("Photos")
                        .HasForeignKey("ItemDBId");
                });

            modelBuilder.Entity("Domain.Entity.ChallengeDB", b =>
                {
                    b.Navigation("Prizes");

                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("Domain.Entity.ItemDB", b =>
                {
                    b.Navigation("Parts");

                    b.Navigation("Photos");
                });
#pragma warning restore 612, 618
        }
    }
}
